//
// Sample named.conf BIND DNS server 'named' configuration file
// for the Red Hat BIND distribution.
//
// See the BIND Administrator's Reference Manual (ARM) for details, in:
//   file:///usr/share/doc/bind-*/arm/Bv9ARM.html
// Also see the BIND Configuration GUI : /usr/bin/system-config-bind and 
// its manual.
//

include "/etc/rndc.key";

acl "mmhost" {
	127.0.0.1;
	85.14.7.2
	85.14.7.100;
	10.2.0.1;
};
acl "mmnets" {
	85.14.7.0/24;
	192.168.0.0/24;
	192.168.4.0/24;
	192.168.5.0/24;
	192.168.122.0/24;
	192.168.133.0/24;
	192.168.155.0/16;
	10.8.0.0/24;
	10.9.0.0/30;
	10.2.0.0/24;
	10.0.0.0/24;
};

controls {
	inet 127.0.0.1 allow { localhost; } keys { "rndc-key"; };
};

options {
        // Those options should be used carefully because they disable port
        // randomization
	listen-on port 53 {
		127.0.0.1;
		10.8.0.1;
		192.168.0.2;
	};
	//query-source    port 53;
	query-source address 85.14.7.100 port 53;
	// query-source-v6 port 53;
	// Put files that named is allowed to write in the data/ directory:
	directory "/var/named"; // the default
	dump-file 		"data/cache_dump.db";
    statistics-file 	"data/named_stats.txt";
    memstatistics-file 	"data/named_mem_stats.txt";

};
// To enable logging, uncomment the next line
include "/etc/named_loging.conf";

//
// All BIND 9 zones are in a "view", which allow different zones to be served
// to different types of client addresses, and for options to be set for groups
// of zones.
//
// By default, if named.conf contains no "view" clauses, all zones are in the 
// "default" view, which matches all clients.
// 
// If named.conf contains any "view" clause, then all zones MUST be in a view; 
// so it is recommended to start off using views to avoid having to restructure
// your configuration files in the future.
//
view "localhost_resolver" {
/* This view sets up named to be a localhost resolver ( caching only nameserver ).
 * If all you want is a caching-only nameserver, then you need only define this view:
 */
	match-clients 		{ mmhost; mmnets; };
	match-destinations	{ mmhost; mmnets; };
	recursion yes;
	# all views must contain the root hints zone:
#	include "/etc/named.root.hints";

        /* these are zones that contain definitions for all the localhost
         * names and addresses, as recommended in RFC1912 - these names should
	 * ONLY be served to localhost clients:
	 */
	include "/etc/named.rfc1912.zones";
    zone "siteground.intranet" {
        type forward;
        forward only;
        forwarders { 192.168.0.110; 192.168.0.111; 192.168.4.100; };
    };

};
view "internal" {
/* This view will contain zones you want to serve only to "internal" clients
   that connect via your directly attached LAN interfaces - "localnets" .
 */
	match-clients		{ mmnets; };
	match-destinations	{ mmnets; };
	recursion yes;
	// all views must contain the root hints zone:
//	include "/etc/named.root.hints";

        // include "named.rfc1912.zones";
	// you should not serve your rfc1912 names to non-localhost clients.

	// These are your "authoritative" internal zones, and would probably
	// also be included in the "localhost_resolver" view above :
//	zone "siteground.com" {
//		type master;
//		file "siteground.com.db";
//	};

	zone "testme.com" {
		type master;
		file "testme.com.db";
	};

	zone "jolan.com" {
		type master;
		file "jolan.com.db";
	};

//	zone "my.internal.zone" { 
//		type master;
//		file "my.internal.zone.db";
//	};
//	zone "my.slave.internal.zone" {
//		type slave;
//		file "slaves/my.slave.internal.zone.db";
//		masters { /* put master nameserver IPs here */ 127.0.0.1; } ;
//		// put slave zones in the slaves/ directory so named can update them
//	};	
//	zone "my.ddns.internal.zone" {
//		type master;
//		allow-update { key ddns_key; };
//		file "slaves/my.ddns.internal.zone.db";
//		// put dynamically updateable zones in the slaves/ directory so named can update them
//	};			
	include "/etc/named.root.hints";
};
key ddns_key
{
	algorithm hmac-md5;
	secret "SkKOwyzrLFJUV9p1irqTrz9tO8Z5sytLVdz3DjdHZSRRxr3rXkyiuz6xQ6sj";
};
//view    "external"
//{
/* This view will contain zones you want to serve only to "external" clients
 * that have addresses that are not on your directly attached LAN interface subnets:
 */
//	match-clients		{ any; };
//	match-destinations	{ any; };

//	recursion no;
	// you'd probably want to deny recursion to external clients, so you don't
        // end up providing free DNS service to all takers

	// all views must contain the root hints zone:

	// These are your "authoritative" external zones, and would probably
        // contain entries for just your web and mail servers:

//	zone "my.external.zone" { 
//		type master;
//		file "my.external.zone.db";
//	};
//};
